const drawSquircle=(e,t,i,r,h,l)=>{const s=l,o=h/2;e.beginPath(),e.lineTo(i,o),e.lineTo(t.width-i,o),e.bezierCurveTo(t.width-i/r,o,t.width-o,i/r,t.width-o,i),e.lineTo(t.width-o,t.height-i),e.bezierCurveTo(t.width-o,t.height-i/r,t.width-i/r,t.height-o,t.width-i,t.height-o),e.lineTo(i,t.height-o),e.bezierCurveTo(i/r,t.height-o,o,t.height-i/r,o,t.height-i),e.lineTo(o,i),e.bezierCurveTo(o,i/r,i/r,o,i,o),e.closePath(),h?(e.strokeStyle=s,e.lineWidth=h,e.stroke()):(e.fillStyle=s,e.fill())};registerPaint("squircle",class{static get contextOptions(){return{alpha:!0}}static get inputProperties(){return["--squircle-radius","--squircle-smooth","--squircle-outline","--squircle-color","--squircle-ratio"]}paint(e,t,i){let r=i.get("--squircle-ratio");const h=parseInt(r)?parseInt(r):1.8,l=10*i.get("--squircle-smooth"),s=parseInt(i.get("--squircle-radius"),10)*h,o=parseInt(i.get("--squircle-outline"),10),c=i.get("--squircle-color").toString().replace(/\s/g,""),n=()=>""!==l?0===l?1:l:8,u=()=>o||0,a=()=>c||"#f45";s<t.width/2&&s<t.height/2?drawSquircle(e,t,s,n(),u(),a()):drawSquircle(e,t,Math.min(t.width/2,t.height/2),n(),u(),a())}});